<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Confirm Password</title>
<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }
  .container {
    width: 350px;
    padding: 20px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  h2 {
    margin-bottom: 20px;
    text-align: center;
  }
  label {
    font-weight: bold;
  }
  input[type="password"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
  }
  button {
    width: 100%;
    padding: 10px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  button:hover {
    background-color: #0056b3;
  }
</style>
</head>
<body>
<div class="container">
  <h2>Confirm Password</h2>
  <form id="confirmPasswordForm" >
    <label for="password">New Password:</label>
    <input type="password" id="password" name="password" required>
    <label for="confirmPassword">Confirm Password:</label>
    <input type="password" id="confirmPassword" name="confirmPassword" required>
    <!-- Add a hidden input field to store the token -->
    <input type="hidden" id="token" name="token">
    <button type="submit">Confirm</button>
  </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById('confirmPasswordForm').addEventListener('submit', async function(event) {
      event.preventDefault(); // Prevent the default form submission
  
      // Extract password values from the form
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      
      // Extract token value from the hidden input field
      const urlParams = new URLSearchParams(window.location.search);
      const token = urlParams.get('token');  
      try {
        // Construct request body object
        const requestBody = {
          password: password,
          confirmPassword: confirmPassword,
          token: token
        };
  
        // Send form data to the server using fetch API
        const response = await fetch('/updatePassword', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(requestBody)
        });
  
        // Check if the response status is OK (200)
        if (response.ok) {
          // Parse the JSON response
          const data = await response.json();
  
          // Show a success sweet alert
          Swal.fire({
            icon: 'success',
            title: data.message,
            showConfirmButton: false,
            timer: 3000 
          });
          window.location.href = '/login';
        } else {
          // If the response status is not OK, handle it as an error
          throw new Error('Failed to update password');
        }
      } catch (error) {
        console.error('Error updating password:', error);
        // Show an error sweet alert if there's an error
        Swal.fire({
          icon: 'error',
          title: 'Internal Server Error',
          text: 'An error occurred while updating the password',
          confirmButtonText: 'OK'
        });
      }
    });
  </script>
  
  
  
</body>
</html>
